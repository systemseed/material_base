<?php

/**
 * @file
 * Functions to support theming in the Material Base theme.
 */

use Drupal\Core\Template\Attribute;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_HOOK().
 */
function material_base_preprocess_html(&$variables) {
  // Check for SVG sprite file
  $icons_file = \Drupal::theme()->getActiveTheme()->getPath() . '/dist/images/icons.svg';

  if (file_exists($icons_file)) {
    // Get the contents of the SVG sprite.
    $icons = file_get_contents($icons_file);

    if ($icons) {
      // Add SVG sprite to page_bottom
      $variables['page_bottom']['icons'] = array(
        '#type' => 'inline_template',
        '#template' => '<span class="hidden">' . $icons . '</span>',
      );
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function material_base_preprocess_form_element(&$variables) {
  $element = $variables['element'];

  if (isset($element['#attributes'])) {
    $variables['input_attributes'] = new Attribute($element['#attributes']);
  }

  // Copied from core's template_preprocess_textarea
  if ($element['#type'] == 'textarea') {
    $attributes = [
      'id',
      'name',
      'rows',
      'cols',
      'maxlength',
      'placeholder',
    ];
    \Drupal\Core\Render\Element::setAttributes($element, $attributes);
    \Drupal\Core\Render\Element\RenderElement::setAttributes($element, [
      'form-textarea',
    ]);
    $variables['textarea_wrapper_attributes'] = new Attribute();
    $variables['textarea_attributes'] = new Attribute($element['#attributes']);
    $variables['textarea_value'] = $element['#value'];
    $variables['textarea_resizable'] = !empty($element['#resizable']) ? $element['#resizable'] : NULL;
    $variables['textarea_required'] = !empty($element['#required']) ? $element['#required'] : NULL;
  }

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function material_base_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'form_element__' . $variables['element']['#type'];
}
